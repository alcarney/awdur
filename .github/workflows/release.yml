name: Release

on:
  push:
    branches:
    - release

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Should Release?
      id: dorelease
      run: |
        ./scripts/should-release.sh


    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12'
      if: steps.dorelease.outputs.yes


    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
      if: steps.dorelease.outputs.yes

    - run: |
        python --version
        python -m pip install --upgrade pip
        python -m pip install bump2version
      if: steps.dorelease.outputs.yes

    - name: Prepare Release
      id: info
      run: |
         echo "Preparing ${RELEASE_KIND} release"

         git config user.email "alcarneyme@gmail.com"
         git config user.name "Alex Carney"

         bumpversion ${RELEASE_KIND}
         release_date=$(date +%Y-%m-%d)

         version=$(jq -r .version package.json)
         echo "Version: $version"

         echo "::set-env name=VERSION::$version"
         echo "::set-output name=VERSION::$version"

         echo "::set-env name=RELEASE_DATE::$release_date"
         echo "::set-output name=RELEASE_DATE::$release_date"
      if: steps.dorelease.outputs.yes

    - name: Install Dependencies
      run: yarn install
      if: steps.dorelease.outputs.yes

    - name: Build Packages
      run: |
        yarn run dist
        ls build/
      if: steps.dorelease.outputs.yes

    - name: Tag Release
      run: |
        git push origin release
        git push origin --tags
      if: steps.dorelease.outputs.yes

    - name: Export release assets
      id: assets
      run: |
        deb=$(find build/ -name '*.deb' -exec basename {} \;)
        echo "::set-output name=deb::$deb"

        snap=$(find build/ -name '*.snap' -exec basename {} \;)
        echo "::set-output name=snap::$snap"

      if: steps.dorelease.outputs.yes

    - name: Create Release
      id: release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.info.outputs.VERSION }}
        release_name: v${{ steps.info.outputs.VERSION}} - ${{ steps.info.outputs.RELEASE_DATE }}
        draft: false
        prerelease: ${{ github.ref == 'refs/heads/develop' }}
      if: steps.dorelease.outputs.yes

    - name: Upload Deb Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: build/${{ steps.assets.outputs.deb }}
        asset_name: ${{ steps.assets.outputs.deb }}
        asset_content_type: application/octet-stream
      if: steps.dorelease.outputs.yes

    - name: Upload Snap Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: build/${{ steps.assets.outputs.snap }}
        asset_name: ${{ steps.assets.outputs.snap }}
        asset_content_type: application/octet-stream
      if: steps.dorelease.outputs.yes

    - name: Upload to Snapstore
      uses: snapcore/action-publish@v1
      with:
        store_login: ${{ secrets.SNAPCRAFT_TOKEN }}
        snap: ${{ steps.assets.outputs.snap }}
        release: stable